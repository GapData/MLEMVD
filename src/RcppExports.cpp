// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// HestonCOS
double HestonCOS(double S, double K, double T, double r, double q, double sigma, double lmbda, double meanV, double v0, double rho, char otype, int N);
RcppExport SEXP _MLEMVD_HestonCOS(SEXP SSEXP, SEXP KSEXP, SEXP TSEXP, SEXP rSEXP, SEXP qSEXP, SEXP sigmaSEXP, SEXP lmbdaSEXP, SEXP meanVSEXP, SEXP v0SEXP, SEXP rhoSEXP, SEXP otypeSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lmbda(lmbdaSEXP);
    Rcpp::traits::input_parameter< double >::type meanV(meanVSEXP);
    Rcpp::traits::input_parameter< double >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< char >::type otype(otypeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(HestonCOS(S, K, T, r, q, sigma, lmbda, meanV, v0, rho, otype, N));
    return rcpp_result_gen;
END_RCPP
}
// HestonVega
double HestonVega(double S, double K, double T, double r, double q, double sigma, double lmbda, double meanV, double v0, double rho, char otype, int N);
RcppExport SEXP _MLEMVD_HestonVega(SEXP SSEXP, SEXP KSEXP, SEXP TSEXP, SEXP rSEXP, SEXP qSEXP, SEXP sigmaSEXP, SEXP lmbdaSEXP, SEXP meanVSEXP, SEXP v0SEXP, SEXP rhoSEXP, SEXP otypeSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lmbda(lmbdaSEXP);
    Rcpp::traits::input_parameter< double >::type meanV(meanVSEXP);
    Rcpp::traits::input_parameter< double >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< char >::type otype(otypeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(HestonVega(S, K, T, r, q, sigma, lmbda, meanV, v0, rho, otype, N));
    return rcpp_result_gen;
END_RCPP
}
// getImpliedVolatility
double getImpliedVolatility(double S, double V, double K, double T, double r, double q, double sigma, double lmbda, double meanV, double v0, double rho, char otype, double x_abs_err, int max_iter, int N);
RcppExport SEXP _MLEMVD_getImpliedVolatility(SEXP SSEXP, SEXP VSEXP, SEXP KSEXP, SEXP TSEXP, SEXP rSEXP, SEXP qSEXP, SEXP sigmaSEXP, SEXP lmbdaSEXP, SEXP meanVSEXP, SEXP v0SEXP, SEXP rhoSEXP, SEXP otypeSEXP, SEXP x_abs_errSEXP, SEXP max_iterSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type V(VSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type T(TSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lmbda(lmbdaSEXP);
    Rcpp::traits::input_parameter< double >::type meanV(meanVSEXP);
    Rcpp::traits::input_parameter< double >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< char >::type otype(otypeSEXP);
    Rcpp::traits::input_parameter< double >::type x_abs_err(x_abs_errSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(getImpliedVolatility(S, V, K, T, r, q, sigma, lmbda, meanV, v0, rho, otype, x_abs_err, max_iter, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MLEMVD_HestonCOS", (DL_FUNC) &_MLEMVD_HestonCOS, 12},
    {"_MLEMVD_HestonVega", (DL_FUNC) &_MLEMVD_HestonVega, 12},
    {"_MLEMVD_getImpliedVolatility", (DL_FUNC) &_MLEMVD_getImpliedVolatility, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_MLEMVD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
